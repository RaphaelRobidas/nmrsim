[metadata]
name = nmrsim
version = 0.5.2
author = Geoffrey M. Sametz
author_email = "Geoffrey M. Sametz" <sametz@udel.edu>
description = A library for simulating nuclear magnetic resonance (NMR) spectra.
long_description = file: README.rst
long_description_content_type = text/x-rst
url = https://github.com/sametz/nmrsim
license = MIT
license_files = LICENSE
classifiers =
    License :: OSI Approved :: MIT License
    Operating System :: OS Independent
    Development Status :: 4 - Beta
    Intended Audience :: Science/Research
    Intended Audience :: Education
    Programming Language :: Python :: 3 :: Only
    Topic :: Education
    Topic :: Scientific/Engineering :: Chemistry
    Topic :: Scientific/Engineering :: Physics
    Topic :: Scientific/Engineering :: Visualization

[options]
python_requires = >=3.6
package_dir =
    = src
packages = find:
include_package_data = True
install_requires =
    matplotlib
    numpy
    sparse!=0.11, !=1.12
    importlib_resources ; python_version<"3.7"

[options.packages.find]
where = src

[options.extras_require]
dev = flake8
      flake8-bugbear
      black
      ipykernel
      jupyter
      nbsphinx
      pytest
      pytest-cov
      pyfakefs
      sphinx
      sphinx_rtd_theme
      sphinxcontrib-napoleon
      bokeh
      tox
;      tox-pyenv

######################
# Tool configuration #
######################

[flake8]
exclude =
    .git,
    __pycache__,
    docs/source/conf.py,
    env,
    venv,
    .venv,
    .tox,
    jupyter,
    tests/dnmr_standards.py,
    build,
    dist
ignore =
    # allowing I for Intensity/Integration *for now*
    E741
max-line-length = 119

[tool:pytest]
testpaths = tests
addopts = --cov --strict-markers

[coverage:run]
source = nmrsim
branch = True

[coverage:report]
show_missing = True
skip_covered = True

[coverage:paths]
source =
    src/nmrsim/
    */site-packages/nmrsim/

[tox:tox]
envlist = py36, py37, py38, py39, py310
isolated_build = True

[testenv]
deps =
    pyfakefs
    pytest
    pytest-cov
commands =
    pytest {posargs}
# When converting from tox.ini to setup.cfg, found that omitting
# the following setting caused pyfakefs tests in qm.py to fail when running
# tox from the command line (tests passed if run in PyCharm).
# usedevelop=True should = "pip install -e ."
usedevelop=True

[testenv:format]
skip_install = True
deps =
    black
commands =
    black {posargs:--check --diff --skip-string-normalization src}
;    black{posargs: --check --diff --skip-string-normalization src/nmrsim/qm.py}
[testenv:flake8]
skip_install = True
deps =
    flake8
    flake8-bugbear
commands =
    flake8 {posargs}